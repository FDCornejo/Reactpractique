{"version":3,"sources":["Components/Cards.jsx","Views/Example.jsx","Components/Table.jsx","Views/App.jsx","Router/index.jsx","serviceWorker.js","index.js"],"names":["Card","info","className","src","show","image","medium","name","href","officialSite","getBaseUrl","Example","state","elements","texto","miFuncion","s","axios","get","split","then","response","console","log","data","setState","handleChangeSearch","e","target","value","item","this","map","index","key","id","onChange","type","placeholder","aria-label","aria-describedby","onClick","Component","Table","dato","scope","num","year","App","movies","cosas","data-ride","alt","AppRouter","to","data-toggle","data-target","aria-controls","aria-expanded","style","margin","exact","path","component","Parent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad5d5209.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Card({ info }) {\r\n  return (\r\n    <div className=\"col-sm-12 col-lg-3 col-md-4\">\r\n      <div className=\"card\">\r\n        <img src={info.show.image.medium} className=\"card-img-top\"></img>\r\n        <div className=\"card-body\">\r\n          <h5>{info.show.name}\r\n          </h5>\r\n          <a href={info.show.officialSite} className=\"btn btn-primary\">Go to the page</a>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default Card;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Card from '../Components/Cards';\r\nconst getBaseUrl = \"http://api.tvmaze.com/search/shows?q=\";\r\n\r\n\r\nexport default class Example extends Component {\r\n    state = {\r\n        elements: [],\r\n        texto: 'girls'\r\n    };\r\n\r\n    miFuncion = () => {\r\n        var s = this.state.texto\r\n        axios\r\n            .get(getBaseUrl + s.split(''))\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.setState({ elements: response.data })\r\n                this.setState({ name: response.data.name });\r\n            })\r\n    }\r\n\r\n    handleChangeSearch = (e) => {\r\n        this.setState({ texto: e.target.value });\r\n    }\r\n\r\n\r\n    render() {\r\n        var item = this.state.elements.map((value, index) => {\r\n            return (\r\n                <Card key={value.show.id} info={value}></Card>\r\n            )\r\n        });\r\n        return (\r\n\r\n            <div>\r\n                <h1>Search a Serial</h1>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\r\n                                        <i className=\"material-icons\">\r\n                                            tv</i>\r\n                                    </span>\r\n                                </div>\r\n                                <input onChange={this.handleChangeSearch} type=\"text\" className=\"form-control\" placeholder=\"Try with Naruto\" aria-label=\"Username\" aria-describedby=\"inputGroup-sizing-lg\" />\r\n                                <button className=\"btn btn-primary\" onClick={this.miFuncion}>\r\n                                    <i className=\"material-icons\">search</i>\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                   \r\n                    </div>\r\n                    <div className=\"row\">\r\n                            {item}\r\n\r\n                        </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n};\r\n","import React from 'react';\r\n\r\nfunction Table(dato) {\r\n  console.log(dato.info)  \r\n  return (\r\n      \r\n    <tr>\r\n      <th scope=\"row\">{dato.info.num}</th>\r\n      <td>{dato.info.name}</td>\r\n      <td>{dato.info.year}</td>\r\n    </tr>\r\n\r\n\r\n    )\r\n}\r\nexport default Table;","import React, { Component } from 'react';\nimport Table from '../Components/Table';\nexport default class App extends Component {\n  state = {\n    movies: [\n      {\n        num: 1,\n        name: 'El asesinato de Gianni Versace ',\n        year: 2018,\n\n      },\n      {\n        num: 2,\n        name: ' Stranger Thingsh',\n        year: 2016,\n\n      },\n      {\n        num: 3,\n        name: ' Unbreakable Kimmy Schmidt',\n        year: 2015,\n\n      },\n      {\n        num: 4,\n        name: 'Bodyguard ',\n        year: 2018,\n\n      },\n      {\n        num: 5,\n        name: 'Love ',\n        year: 2016,\n\n      },\n      {\n        num: 6,\n        name: 'Narcos ',\n        year: 2015,\n\n      },\n      {\n        num: 7,\n        name: 'Peaky Blinders',\n        year: 2013,\n\n      },\n      {\n        num: 8,\n        name: 'Black Mirror',\n        year: 2011,\n\n      },\n      {\n        num: 9,\n        name: 'Bates Motel',\n        year: 2013,\n\n      },\n      {\n        num: 10,\n        name: 'Mindhunter ',\n        year: 2017,\n\n      },\n    ]\n  };\n\n  render() {\n    var cosas = this.state.movies.map((value, index) => {\n      return (\n       //console.log(value)\n        <Table key={value.num} info={value}></Table>\n      )\n    });\n    return (\n      <div>\n        <div id=\"carouselExampleSlidesOnly\" className=\"carousel slide\" data-ride=\"carousel\">\n          <div className=\"carousel-inner\">\n            <div className=\"carousel-item active\">\n              <img src=\"https://picsum.photos/800/200/?blur\" className=\"d-block w-100\" alt=\"...\" />\n            </div>\n            <div className=\"carousel-item\">\n              <img src=\"https://picsum.photos/800/200/?blur\" className=\"d-block w-100\" alt=\"...\" />\n            </div>\n            <div className=\"carousel-item\">\n              <img src=\"https://picsum.photos/800/200/?blur\" className=\"d-block w-100\" alt=\"...\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <h1>Top 10  Netflix serials</h1>\n          <div className=\"row\">\n\n            <div className=\"col-sm-12\">\n              <table className=\"table table-dark\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Year</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {cosas}\n                </tbody>\n              </table>\n\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n\n\n    );\n  }\n}\n\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Parent from '../Views/Example';\r\nimport App from '../Views/App';\r\nimport '../Router/router.css'\r\n\r\n\r\nexport default class AppRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n                    <a className=\"navbar-brand text-light \" to=\"/\">Industrie of Cinema</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={{ margin: 5 }} to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={{ margin: 5 }} to=\"/findserial\">Find Serial</Link>\r\n\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n\r\n                </nav>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={App} />\r\n                    <Route path=\"/findserial\" component={Parent} />\r\n\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './Router'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}